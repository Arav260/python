{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "b45b0576-f465-4969-a14e-36d5f3152e4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 15\n",
    "y = 30"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d143bed7-6332-4423-b6aa-1177f34aa06c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45\n"
     ]
    }
   ],
   "source": [
    "print(x+y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "938c208f-1f60-4372-8816-2e1e705557a0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "-15\n"
     ]
    }
   ],
   "source": [
    "print(x-y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "db8236dd-0f99-4bff-936e-bf4e70a5e6d1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.5\n"
     ]
    }
   ],
   "source": [
    "print(x/y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "cf2fc41d-d9b4-4ee0-8ae2-8e745ac77234",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n"
     ]
    }
   ],
   "source": [
    "print(x//y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "88e49792-3c29-484b-b009-1d94d596287a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "450\n"
     ]
    }
   ],
   "source": [
    "print(x*y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "9c00474b-628a-4d28-9c03-4220803fcbae",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "x = 6\n",
    "y = 5\n",
    "print(x%y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5742d538-58d2-4aab-9dee-893841a19b60",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1.2\n"
     ]
    }
   ],
   "source": [
    "print(x/y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "a9aaaff5-8c07-4cce-9619-6b41d84fd69b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n"
     ]
    }
   ],
   "source": [
    "print(x//y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "11e9de28-8543-4299-aaad-1ab6dc2493ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "x = 2\n",
    "y = 2\n",
    "print(x**y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d9a2128d-0d1c-4506-ba3e-cd0c0c43b8bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "a = 15\n",
    "b = 14"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1fcbabea-c293-4bca-a1f5-64a998eccb42",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(a==b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "361c5eb7-a409-4083-b8aa-933f90b832b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(a!=b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "67f4d953-e329-4fbf-a39b-07d914fe9081",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(a>b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "951ce21d-035f-4ce8-a8f4-d31352dac51f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(a<b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1681f990-a0b7-49f6-946b-8a430935520b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(a>=b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "8919bc67-c173-48ec-bbe2-6000a94e487e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(a<=b)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "5418a3fc-7789-4acc-82d6-ae567214bd8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "r = 15\n",
    "s = 15"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "4495296e-795d-4634-a04a-5f6b9e700ee1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(r>=s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "da8efc79-a77f-4e00-af9a-9ce0a5c6a9a0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(r<=s)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "577ecb79-9b69-4775-b862-a1f8f1f592a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "612f4780-30c1-4a98-a77a-64317082d204",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(x < 10 and x < 20)\n",
    "\n",
    "#checks both condition.\n",
    "# returns true when both the conditions are true"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "667ba8eb-7c67-4d24-b3e9-bd8ac9f851b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(x < 6 or x >20)\n",
    "# returns true when either of the condition is true."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b699ec02-4d49-49a2-9192-4a7aaa894765",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(not(x > 3 and x < 10))\n",
    "# returns true when statement is false.\n",
    "# returns false when statement is true."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c4e22992-38ef-4a17-b6da-896546823ac3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "x = ['apple', 'banana']\n",
    "y = ['apple' , 'banana']\n",
    "z = x\n",
    "\n",
    "print(x is z)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "56270df0-b844-4c6a-99fe-a1ac1a2ab3c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(x is y)\n",
    "# false because x and y are two different listes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "dfdf10dd-4d88-4e99-ab2f-119beb979129",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(x==y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9e675ee1-146f-4cea-8a64-34f941244efb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(z is not x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "7ed0c420-9715-484f-8f00-4b7616279743",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(y is not x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "261a2703-ebdf-4ab8-9278-9c77036fd4da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "x = 'Hi, I an Arav.'\n",
    "\n",
    "if 'Hi' in x:\n",
    "    print(True)\n",
    "\n",
    "# in checks wherther the item is present or not."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b7bfe7b3-4968-4655-ab3a-cccfa3edff08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "if 'Hi' not in x:\n",
    "    print(True)\n",
    "else:\n",
    "    print(False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b999d9a-fa47-408a-aa43-38a2e7ca2ac2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
